_goals=( ${(Q)"${(z)$(<<\EO:_goals
'build-image:Package an application into an OCI image using a buildpack, forking the lifecycle to make sure that package ran. This goal is suitable for command-line invocation. If you need to configure a goal execution in your build, use build-image-no-fork instead. ' 'build-image-no-fork:Package an application into an OCI image using a buildpack, but without forking the lifecycle. This goal should be used when configuring a goal execution in your build. To invoke the goal on the command-line, use build-image instead. ' 'build-info:Generate a build-info.properties file based on the content of the current MavenProject. ' 'help:Display help information on spring-boot-maven-plugin. Call mvn spring-boot\:help -Ddetail=true -Dgoal=<goal-name> to display parameter details. ' 'process-aot:Invoke the AOT engine on the application. ' 'process-test-aot:Invoke the AOT engine on tests. ' 'repackage:Repackage existing JAR and WAR archives so that they can be executed from the command line using java -jar. With layout=NONE can also be used simply to package a JAR with nested dependencies (and no main class, so not executable). ' 'run:Run an application in place. ' 'start:Start a spring application. Contrary to the run goal, this does not block and allows other goals to operate on the application. This goal is typically used in integration test scenario where the application is started before a test suite and stopped after. ' 'stop:Stop an application that has been started by the '\''start'\'' goal. Typically invoked once a test suite has completed. ' 'test-run:Run an application in place using the test runtime classpath. The main class that will be used to launch the application is determined as follows\: The configured main class, if any. Then the main class found in the test classes directory, if any. Then the main class found in the classes directory, if any.'
EO:_goals
)}"} )
